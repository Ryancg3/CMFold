% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.mclassiKnn.R
\name{predict.mclassiKnn}
\alias{predict.mclassiKnn}
\title{Predictions with an mclassiKnn object}
\usage{
\method{predict}{mclassiKnn}(object, newdata = NULL, msubset = NULL, predict.type = "prob")
}
\arguments{
\item{object}{mknn object defined with \code{\link[classiMultiFuncTest:mclassiKnn]{mclassiKnn}}}

\item{newdata}{the functional covariates for prediction as a \code{list} of \eqn{m} objects in \code{matrix} form. Each matrix stores a dimension of the set of functions, such that columns are individuals (\eqn{n}) and rows are discrete-time points (\eqn{t}). Functions' values should be of the same time points as the training data.}

\item{predict.type}{\code{string} to specify type of prediction. Either \code{"response"} or \code{"prob"}}
}
\description{
The present function yields predictions for new data with an mclassiKnn object .
}
\examples{

## 3-dimensional functions
# classes
classes <- as.factor(c("Cat", "Dog", "Dog", "Cat"))

# training_data
x <- replicate(4, rnorm(100, 0, 3))
y <- replicate(4, rnorm(100, 3, 1))
z <- replicate(4, rpois(100, 2))
training_data <- list(x, y, z)

# Creating object for mknn prediction
object <- mclassiKnn(classes = classes, fdata = training_data, knn = 3, nderiv = 0, cl = NULL)

# test_data
x <- replicate(2, rnorm(100, 0, 2.9))
y <- replicate(2, rnorm(100, 3, 1.5))
z <- replicate(2, rpois(100, 3))

test_data <- list(x, y, z)

# Predict

predict.mclassiKnn(object = object, newdata = test_data, predict.type = "response")
}
